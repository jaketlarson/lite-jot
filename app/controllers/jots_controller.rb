class JotsController < ApplicationController
  def index
    jots = current_user.jots
    
    render :json => jots, :each_serializer => JotSerializer
  end

  def create
    folder_autogenerated = false
    topic_autogenerated = false

    if params[:folder_id].nil? || params[:folder_id].to_i <= 0 || current_user.folders.find(params[:folder_id]).nil?
      time = Time.new
      folder = current_user.folders.new
      folder.title = "New #{time.strftime('%b %d')}"
      folder.save
      folder_id = folder.id

      folder_autogenerated = true
    else
      folder_id = params[:folder_id]
    end

    if params[:topic_id].nil? || params[:topic_id].to_i <= 0 || current_user.topics.find(params[:topic_id]).nil?
      time = Time.new
      topic = current_user.topics.new
      topic.title = "New #{time.strftime('%b %d')}"
      topic.save
      topic_id = topic.id

      topic_autogenerated = true
    else
      topic_id = params[:topic_id]
    end

    folder = current_user.folders.find(folder_id)
    folder.touch
    topic = current_user.topics.find(topic_id)
    topic.folder_id = folder_id
    topic.save
    topic.touch # incase the update doesn't apply

    jot = current_user.jots.new(jot_params)
    jot.topic_id = topic_id

    if jot.save
      if topic_autogenerated && folder_autogenerated
        ser_jot = JotSerializer.new(jot, :root => false)
        ser_topic = TopicSerializer.new(topic, :root => false)
        ser_folder = FolderSerializer.new(folder, :root => false)

        render :json => {:jot => ser_jot, :auto_folder => ser_folder, :auto_topic => ser_topic}
      
      elsif !topic_autogenerated && folder_autogenerated
        ser_jot = JotSerializer.new(jot, :root => false)
        ser_folder = FolderSerializer.new(folder, :root => false)

        render :json => {:jot => ser_jot, :auto_folder => ser_folder}
      
      elsif topic_autogenerated && !folder_autogenerated
        ser_jot = JotSerializer.new(jot, :root => false)
        ser_topic = TopicSerializer.new(topic, :root => false)

        render :json => {:jot => ser_jot, :auto_topic => ser_topic}
      
      else
        ser_jot = JotSerializer.new(jot, :root => false)
        render :json => {:jot => ser_jot}
      end
    else
      render :text => 'not okay', :status => 409
    end
  end

  def update
    jot = current_user.jots.find(params[:id])

    if jot.content != params[:content] && !params[:content].nil?
      topic = current_user.topics.find(jot.topic_id)
      topic.touch
      folder = current_user.folders.find(topic.folder_id)
      folder.touch
    end

    if jot.update(jot_params)
      render :json => jot, :root => false

    else
      render :text => 'error', :status => 409
    end
  end

  def destroy
    jot = Jot.find(params[:id])

    if jot.user_id == current_user.id
      if jot.destroy
        render :json => {:success => true, :message => "Jot moved to trash."}
      else
        render :json => {:success => false, :error => "Could not delete jot."}, :status => :bad_request
      end
    else
      render :json => {:success => false, :error => "You do not have permission to delete this jot."}, :status => :bad_request
    end

  end

  protected

    def jot_params
      params.permit(:id, :content, :topic_id, :folder_id, :is_flagged)
    end
end
